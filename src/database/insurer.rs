//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "insurer")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub insurer_id: i32,
    pub insurer_name: String,
    pub insurer_address_1: Option<String>,
    pub insurer_address_2: Option<String>,
    pub insurer_zip: Option<String>,
    pub insurer_contact_f_name: Option<String>,
    pub insurer_contact_l_name: Option<String>,
    pub insurer_phone: Option<String>,
    pub insurer_email: Option<String>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::eligible_cases::Entity")]
    EligibleCases,
}

impl Related<super::eligible_cases::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::EligibleCases.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
